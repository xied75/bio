<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="okButton.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAOJSURBVDhPHZNrTJtVHMZfjc5vTlG3MR14idvQdZssuHFv
        C7RclGA0MynlIhONukyzxAsCQzpmyPzgJSBxHzQxmQvOW+jWcSl9e6NvS4EZNmGFooDQgRuMFhjjMn6e
        8J68yTkn5//L8zz/c6Q9utdR6QyoNAbi9Ub26V7iA5OJE6ZaTLU1nKypoqb2BBUnTWQWvcHDqdnE5BWz
        T19CvNaIlJBXRlXDL3x25iKfNpynuvEH1hBf+CbMhuDmJCzMsra6jPnyFd5uOss7Tb9R3dTCQV050qG8
        96hsMHP821Y+PmOh+rtzcHuJs4kq5F1RuHdH0ZywG+Yi/NFzjcJvfuLojzYqG1tJzjmGdEBjRF/0IRlH
        qlAVvCnm78L8PPL+WKZi72f0IQnv89uFojCnvz9HtP4wL5ZXkGn8iIPaUqRkbS4Vdac5Xle38Vd+Xi8A
        t7i48zEmdmxidLOEb9c2mBzDoXTxfr2JY/Wn+OTUFySk6JAKDK8QWQvjverFP9hL9589Qu51OvZuZ+LJ
        TYwLwOW4aJHFBCtLcyhXuvAMKiyIkW/IR8o2avAEXCiD3ZhdbfgH+oSC61j3b2Ui5h4mBcD/9GYBGOPu
        ShhZsaL85cY34kZbmIqkK06hK2DDolyi3W3F6bAKvyFse7cQir2X0IMS/TujIDQCyxGcsoUOjwV5oA1d
        WQpSTnE680yzeHcOVu/A0m2Y/hdH3KNM7rhvAzD41CMwNiyUhUWHIqyszLLIf+hKhQJ9sQb3gI1l4Ym1
        JXrPNyMffYtu1ROEYh5gXAACz27FV1aE86sv4c4C6+sRlICMujAJKd2YhnfUywWnmf5+rzgwT7PxNTzP
        Pc6A8D+6YWEbjYdeEBdqRiicxeoy4xp2kF6qEYDSLKxDdjwjPtocLQz2ukUXQrhzkvDviaYvbguX4p+B
        G+OweAOXOGPpasEedJEmaiV1WQ6tQw6cQoUr4KbDZWG0zwm3xmg25PC1WiWKh0TxNH6flQuOX/H87UEO
        elCX5glAkR672LAO2bBd68QX9NFu+51gT6dIfUoEK97D6hRKl4UW288ow3bsQzKuoILWkIuUW5jNHDO4
        RzqxD7fjEOH4BL33qpuV9RkRblj03YZ3QMYrrCr/yDgDViKipqDwZaTEzAMcLs9HJxLNKEkkq0SL1piB
        3qBHb8xDIxRmlGSjK9KIdap4A0lkGZIxHnmVNHUC/wPcM8ibHAr+fQAAAABJRU5ErkJggg==
</value>
  </data>
</root>